module.exports={name:"plugin-auto-install",factory:()=>{let h=require("child_process"),f=require("crypto"),o=require("fs"),a=require("path");function u(n){try{let t=f.createHash("sha256"),e=o.statSync(a.join(n.cwd,"yarn.lock"),{throwIfNoEntry:!1});e&&t.update(e.mtimeMs.toString());for(let y of n.workspaces.map(s=>s.cwd).sort()){let s=a.join(y,"package.json"),r=JSON.parse(o.readFileSync(s,"utf-8")),c=Object.keys(r).filter(i=>i.endsWith("ependencies")),g=[];for(let i of c)g.push(...Object.entries(r[i]).map(([k,j])=>`${k}: ${j}`));t.update(g.sort().join(","))}return t.digest("hex")}catch{}}function d(n){let t=p(n);return o.readFileSync(a.join(t,"hash"),"utf-8")}function l(n,t){let e=p(t);o.mkdirSync(e,{recursive:!0}),o.writeFileSync(a.join(e,"hash"),n),o.writeFileSync(a.join(e,".gitignore"),"hash"),console.info(`plugin-auto-install updated hash: ${n}`)}function p(n){return a.join(n.cwd,".yarn","plugins","plugin-auto-install")}return{hooks:{afterAllInstalled(n){try{let t=u(n);t&&l(t,n)}catch{}},async wrapScriptExecution(n,t,e,y,s){try{let r=u(t);try{if(r&&r===d(t))return n}catch{}return console.info("plugin-auto-install detects changes in package.json and/or yarn.lock."),r&&l(r,t),()=>(h.spawnSync("yarn",["install"],s),h.spawnSync("yarn",[s.script,s.args],s).status||0)}catch{}return n}}}}};
//# sourceMappingURL=index.cjs.map
