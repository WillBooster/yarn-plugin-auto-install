module.exports={name:"plugin-auto-install",factory:()=>{let l=require("child_process"),u=require("crypto"),o=require("fs"),s=require("path");function a(n){try{let t=[s.join(n.cwd,"yarn.lock")];for(let c of n.workspaces)t.push(s.join(c.cwd,"package.json"));t.sort();let r=u.createHash("sha256");for(let c of t){let h=o.statSync(c,{throwIfNoEntry:!1});!h||r.update(h.mtimeMs.toString())}return r.digest("hex")}catch{}}function f(n){let t=i(n);return o.readFileSync(s.join(t,"hash"),"utf-8")}function e(n,t){let r=i(t);o.mkdirSync(r,{recursive:!0}),o.writeFileSync(s.join(r,"hash"),n),o.writeFileSync(s.join(r,".gitignore"),"hash")}function i(n){return s.join(n.cwd,".yarn","plugins","plugin-auto-install")}return{hooks:{afterAllInstalled(n){try{let t=a(n);t&&e(t,n)}catch{}},async wrapScriptExecution(n,t){try{let r=a(t);try{if(r&&r===f(t))return n}catch{}console.info("plugin-auto-install detects changes in package.json and/or yarn.lock."),r&&e(r,t),l.spawnSync("yarn",["install"],{env:process.env,stdio:"inherit"})}catch{}return n}}}}};
//# sourceMappingURL=index.cjs.map
