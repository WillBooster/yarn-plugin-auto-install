"use strict";var n={name:"plugin-auto-install",factory:n=>{const t=n("child_process"),e=n("crypto"),r=n("fs"),c=n("path"),s="plugin-auto-install v1.8.7";let i=!1,o="";function a(n){try{const t=e.createHash("sha256"),s=c.join(n.cwd,"yarn.lock");r.statSync(s,{throwIfNoEntry:!1})&&t.update(r.readFileSync(s,"utf8"));for(const e of n.workspaces.map((n=>n.cwd)).sort()){const n=c.join(e,"package.json"),s=JSON.parse(r.readFileSync(n,"utf8")),i=Object.keys(s).filter((n=>n.endsWith("ependencies"))),o=[];for(const n of i)o.push(...Object.entries(s[n]).map((([n,t])=>`${n}: ${t}`)));t.update(o.sort().join(","))}return t.digest("hex")}catch{}}function l(n){try{const t=d(n);return r.readFileSync(c.join(t,"hash"),"utf8")}catch{}}function u(n,t){if(!n||n===o)return!1;try{const e=d(t);r.mkdirSync(e,{recursive:!0}),r.writeFileSync(c.join(e,"hash"),n),r.writeFileSync(c.join(e,".gitignore"),".gitignore\nhash"),console.info(`${s} updated dependency hash: ${n}`),o=n}catch{}return!0}function d(n){return c.join(n.cwd,".yarn","plugins","plugin-auto-install")}return{hooks:{validateProject(n){i=!0;const t=a(n);t&&t===l(n)||u(t,n)},afterAllInstalled(n){i=!1;const t=a(n);t&&t===l(n)||u(t,n)},async wrapScriptExecution(n,e,r,c,o){if(i)return n;try{const r=a(e);if(r&&r===l(e))return n;if(!u(r,e))return n;console.info(`${s} is running 'yarn install' due to dependency changes.`),t.spawnSync("yarn",["install"],{cwd:o.cwd,env:o.env}),console.info(`${s} finished 'yarn install'.`);const i=t.spawnSync("yarn",[c,...o.args],{cwd:o.cwd,env:o.env,stdio:"inherit",shell:!0});return async()=>i.status||0}catch{}return n}}}}};module.exports=n;
//# sourceMappingURL=index.min.cjs.map
