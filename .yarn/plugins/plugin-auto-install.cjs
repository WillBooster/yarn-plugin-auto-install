"use strict";var k=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var O=Object.prototype.hasOwnProperty;var D=(e,s)=>{for(var l in s)k(e,l,{get:s[l],enumerable:!0})},E=(e,s,l,o)=>{if(s&&typeof s=="object"||typeof s=="function")for(let a of b(s))!O.call(e,a)&&a!==l&&k(e,a,{get:()=>s[a],enumerable:!(o=$(s,a))||o.enumerable});return e};var I=e=>E(k({},"__esModule",{value:!0}),e);var N={};D(N,{default:()=>J});module.exports=I(N);var J={name:"plugin-auto-install",factory:e=>{let s=e("node:child_process"),l=e("node:crypto"),o=e("node:fs"),a=e("node:path"),u=`plugin-auto-install v${void 0}`,f=!1,w="",m={validateProject(n){f=!0;let t=h(n);t&&t===y(n)||p(t,n)},afterAllInstalled(n){f=!1;let t=h(n);t&&t===y(n)||p(t,n)},async wrapScriptExecution(n,t,c,S,r){if(f)return n;try{let i=h(t);if(i&&i===y(t)||!p(i,t))return n;console.info(`${u} is running 'yarn install' due to dependency changes.`),s.spawnSync("yarn",["install"],{cwd:r.cwd,env:r.env}),console.info(`${u} finished 'yarn install'.`);let d=s.spawnSync("yarn",[S,...r.args],{cwd:r.cwd,env:r.env,stdio:"inherit",shell:!0});return async()=>d.status||0}catch{}return n}};function h(n){try{let t=l.createHash("sha256"),c=a.join(n.cwd,"yarn.lock");o.statSync(c,{throwIfNoEntry:!1})&&t.update(o.readFileSync(c,"utf8"));for(let r of n.workspaces.map(i=>i.cwd).sort()){let i=a.join(r,"package.json"),d=JSON.parse(o.readFileSync(i,"utf8")),v=Object.keys(d).filter(g=>g.endsWith("ependencies")),j=[];for(let g of v)j.push(...Object.entries(d[g]).map(([H,F])=>`${H}: ${F}`));t.update(j.sort().join(","))}return t.digest("hex")}catch{}}function y(n){try{let t=P(n);return o.readFileSync(a.join(t,"hash"),"utf8")}catch{}}function p(n,t){if(!n||n===w)return!1;try{let c=P(t);o.mkdirSync(c,{recursive:!0}),o.writeFileSync(a.join(c,"hash"),n),o.writeFileSync(a.join(c,".gitignore"),`.gitignore
hash`),console.info(`${u} updated dependency hash: ${n}`),w=n}catch{}return!0}function P(n){return a.join(n.cwd,".yarn","plugins","plugin-auto-install")}return{hooks:m}}};0&&(module.exports={});
//# sourceMappingURL=index.cjs.map
